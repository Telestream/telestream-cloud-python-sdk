# coding: utf-8

"""
    Qc API

    Qc API  # noqa: E501

    The version of the OpenAPI document: 3.0.0
    Contact: cloudsupport@telestream.net
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import telestream_cloud_qc
from telestream_cloud_qc.models.jobs_collection import JobsCollection  # noqa: E501
from telestream_cloud_qc.rest import ApiException

class TestJobsCollection(unittest.TestCase):
    """JobsCollection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test JobsCollection
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = telestream_cloud_qc.models.jobs_collection.JobsCollection()  # noqa: E501
        if include_optional :
            return JobsCollection(
                jobs = [
                    telestream_cloud_qc.models.job.Job(
                        id = 'e75e68e192e6fc04ea3940d302d7bec5', 
                        project_id = '0', 
                        status = 'pending', 
                        state = '0', 
                        duration = 56, 
                        type = 'vidchecker', 
                        progress = 56, 
                        filename = '0', 
                        source_url = '0', 
                        created_at = '0', 
                        updated_at = '0', 
                        error_class = '0', 
                        error_message = '0', 
                        payload = '0', 
                        details = telestream_cloud_qc.models.details.details(
                            media = [
                                telestream_cloud_qc.models.media.Media(
                                    audio = [
                                        telestream_cloud_qc.models.audio_stream.AudioStream(
                                            duration = 78.345, 
                                            codec = 'PCM', 
                                            channels = 6, 
                                            program = '0', 
                                            bitrate = 4608000, 
                                            sample_rate = 48000, )
                                        ], 
                                    video = [
                                        telestream_cloud_qc.models.video_stream.VideoStream(
                                            duration = 78.3450116, 
                                            codec = 'MPEG-2', 
                                            width = 1920, 
                                            height = 1080, 
                                            bitrate = 56, 
                                            fps = 29.97, )
                                        ], 
                                    container = telestream_cloud_qc.models.container.Container(
                                        type = 'mp4', 
                                        bitrate = 56, ), )
                                ], 
                            result = telestream_cloud_qc.models.result.result(
                                alerts = [
                                    telestream_cloud_qc.models.alert.Alert(
                                        level = '0', 
                                        info = '0', 
                                        begin = 1.337, 
                                        end = 1.337, 
                                        stream = 56, 
                                        detail = '0', )
                                    ], 
                                reports = [
                                    '0'
                                    ], ), 
                            synchronization_events = [
                                telestream_cloud_qc.models.synchronization_event.SynchronizationEvent(
                                    timestamp = '0', 
                                    skew = 56, )
                                ], 
                            summary = telestream_cloud_qc.models.summary.Summary(
                                num_sync_events = 56, 
                                avsync_analysis = '0', 
                                avsync_inference = '0', 
                                confidence = 1.337, 
                                skew = 56, 
                                total_length = 1.337, ), ), )
                    ], 
                page = 56, 
                per_page = 56, 
                page_count = 56, 
                total_count = 56
            )
        else :
            return JobsCollection(
        )

    def testJobsCollection(self):
        """Test JobsCollection"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
