# coding: utf-8

"""
    Qc API

    Qc API  # noqa: E501

    The version of the OpenAPI document: 3.0.0
    Contact: cloudsupport@telestream.net
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import telestream_cloud_qc
from telestream_cloud_qc.models.modify_vid_checker8_body import ModifyVidChecker8Body  # noqa: E501
from telestream_cloud_qc.rest import ApiException

class TestModifyVidChecker8Body(unittest.TestCase):
    """ModifyVidChecker8Body unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ModifyVidChecker8Body
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = telestream_cloud_qc.models.modify_vid_checker8_body.ModifyVidChecker8Body()  # noqa: E501
        if include_optional :
            return ModifyVidChecker8Body(
                name = '0', 
                options = telestream_cloud_qc.models.vidchecker_8.vidchecker_8(
                    audio_tests = telestream_cloud_qc.models.audio_configs.audio_configs(
                        audio_test = [
                            telestream_cloud_qc.models.audio_config.audio_config(
                                track_select_test = telestream_cloud_qc.models.track_select_test.track_select_test(
                                    selector = 56, 
                                    selector_type = 'TrackIndex', 
                                    checked = True, ), 
                                audio_codec_test = telestream_cloud_qc.models.audio_codec_test.audio_codec_test(
                                    audio_codec = 'Mpeg1Mpeg2', 
                                    reject_on_error = True, 
                                    checked = True, ), 
                                audio_channel_positions_test = telestream_cloud_qc.models.audio_channel_positions_test.audio_channel_positions_test(
                                    chan_positions = telestream_cloud_qc.models.chan_positions.chan_positions(
                                        chan_pos = [
                                            'Any'
                                            ], ), 
                                    reject_on_error = True, 
                                    checked = True, ), 
                                audio_bit_depth_test = telestream_cloud_qc.models.audio_bit_depth_test.audio_bit_depth_test(
                                    bit_depth = 56, 
                                    reject_on_error = True, 
                                    checked = True, ), 
                                audio_sample_rate_test = telestream_cloud_qc.models.audio_sample_rate_test.audio_sample_rate_test(
                                    sample_rate = 1.337, 
                                    reject_on_error = True, 
                                    checked = True, ), 
                                audio_bitrate_test = telestream_cloud_qc.models.audio_bitrate_test.audio_bitrate_test(
                                    audio_bitrate_lower = 1.337, 
                                    audio_bitrate_upper = 1.337, 
                                    reject_on_error = True, 
                                    checked = True, ), 
                                audio_channels_test = telestream_cloud_qc.models.audio_channels_test.audio_channels_test(
                                    number_of_channels = 56, 
                                    reject_on_error = True, 
                                    checked = True, ), 
                                audio_length_test = telestream_cloud_qc.models.audio_length_test.audio_length_test(
                                    reject_on_error = True, 
                                    checked = True, ), 
                                audio_frequency_test = telestream_cloud_qc.models.audio_frequency_test.audio_frequency_test(
                                    tone_type = 'Continuous', 
                                    frequency = 1.337, 
                                    time_range_enabled = True, 
                                    power = 1.337, 
                                    tolerance = 1.337, 
                                    start_time = 1.337, 
                                    time_secs_or_frames = 'Seconds', 
                                    duration = 1.337, 
                                    duration_secs_or_frames = 'Seconds', 
                                    not_at_any_other_time = True, 
                                    channels = telestream_cloud_qc.models.channels.channels(
                                        channel = [
                                            True
                                            ], ), 
                                    reject_on_error = True, 
                                    checked = True, ), 
                                digital_silence_whole_track_test = telestream_cloud_qc.models.digital_silence_whole_track_test.digital_silence_whole_track_test(
                                    must_or_must_not_be_silent = 'Must', 
                                    reject_on_error = True, 
                                    do_correction = True, 
                                    checked = True, ), 
                                digital_silence_at_start_test = telestream_cloud_qc.models.digital_silence_at_start_end_test.digital_silence_at_start_end_test(
                                    duration_at_start = 1.337, 
                                    duration_at_end = 1.337, 
                                    reject_on_error = True, 
                                    do_correction = True, 
                                    checked = True, ), 
                                digital_silence_at_end_test = telestream_cloud_qc.models.digital_silence_at_start_end_test.digital_silence_at_start_end_test(
                                    duration_at_start = 1.337, 
                                    duration_at_end = 1.337, 
                                    reject_on_error = True, 
                                    do_correction = True, 
                                    checked = True, ), 
                                audio_clipping_test = telestream_cloud_qc.models.audio_clipping_test.audio_clipping_test(
                                    sensitivity = 'Low', 
                                    reject_on_error = True, 
                                    checked = True, ), 
                                audio_transient_test = telestream_cloud_qc.models.audio_transient_test.audio_transient_test(
                                    reject_on_error = True, 
                                    checked = True, ), 
                                audio_dialnorm_test = telestream_cloud_qc.models.audio_dialnorm_test.audio_dialnorm_test(
                                    dialnorm_min = 56, 
                                    dialnorm_max = 56, 
                                    reject_on_error = True, 
                                    checked = True, ), 
                                audio_layout_test = telestream_cloud_qc.models.layout_test.layout_test(
                                    layout_type = 'LayoutTypeFixedIgnoreStartAndEnd', 
                                    start_duration = 1.337, 
                                    start_duration_secs_or_frames = 'Seconds', 
                                    end_duration = 1.337, 
                                    end_duration_secs_or_frames = 'Seconds', 
                                    start_enabled = True, 
                                    start_hours = 56, 
                                    start_minutes = 56, 
                                    start_seconds = 56, 
                                    start_frames = 56, 
                                    end_enabled = True, 
                                    end_hours = 56, 
                                    end_minutes = 56, 
                                    end_seconds = 56, 
                                    end_frames = 56, 
                                    checked = True, ), 
                                audio_phase_test = telestream_cloud_qc.models.audio_phase_test.audio_phase_test(
                                    minimum_phase_enabled = True, 
                                    minimum_phase = 1.337, 
                                    mean_phase_enabled = True, 
                                    mean_phase = 1.337, 
                                    max_mean_phase_enabled = True, 
                                    max_mean_phase = 1.337, 
                                    reject_on_error = True, 
                                    checked = True, ), 
                                audio_min_level_duration_test = telestream_cloud_qc.models.audio_min_level_duration_test.audio_min_level_duration_test(
                                    level = 1.337, 
                                    duration = 1.337, 
                                    reject_on_error = True, 
                                    checked = True, ), 
                                audio_peak_level_test = telestream_cloud_qc.models.audio_peak_level_test.audio_peak_level_test(
                                    min_peak_level_enabled = True, 
                                    min_peak_level = 1.337, 
                                    max_peak_level_enabled = True, 
                                    max_peak_level = 1.337, 
                                    correction_threshold = 1.337, 
                                    reject_on_error = True, 
                                    do_correction = True, 
                                    checked = True, ), 
                                audio_loudness_itest = telestream_cloud_qc.models.audio_loudness_itest.audio_loudness_itest(
                                    loudness_level = 1.337, 
                                    loudness_tolerance = 1.337, 
                                    mode = 'LoudnessModeItu', 
                                    reject_on_error = True, 
                                    do_correction = True, ), 
                                audio_loudness_stest = telestream_cloud_qc.models.audio_loudness_stest.audio_loudness_stest(
                                    loudness_level = 1.337, 
                                    window_length = 1.337, 
                                    reject_on_error = True, 
                                    do_correction = True, ), 
                                audio_loudness_mtest = telestream_cloud_qc.models.audio_loudness_mtest.audio_loudness_mtest(
                                    loudness_level = 1.337, 
                                    reject_on_error = True, 
                                    do_correction = True, ), 
                                audio_loudness_range_test = telestream_cloud_qc.models.audio_loudness_range_test.audio_loudness_range_test(
                                    do_min = True, 
                                    range_min = 1.337, 
                                    do_max = True, 
                                    range_max = 1.337, 
                                    reject_on_error = True, 
                                    checked = True, ), 
                                audio_ppm_level_test = telestream_cloud_qc.models.audio_ppm_level_test.audio_ppm_level_test(
                                    min_ppm_level_enabled = True, 
                                    min_ppm_level = 1.337, 
                                    max_ppm_level_enabled = True, 
                                    max_ppm_level = 1.337, 
                                    reject_on_error = True, 
                                    do_correction = True, 
                                    checked = True, ), 
                                nielsen_watermark_detection_test = telestream_cloud_qc.models.nielsen_watermark_detection_test.nielsen_watermark_detection_test(
                                    naes2_enabled = True, 
                                    naes2_sids_any_or_specific = 'SidsAny', 
                                    naes2_sids = '0', 
                                    naes2_high_frequency_enabled = True, 
                                    naes2_high_frequency_sids_any_or_specific = 'SidsAny', 
                                    naes2_high_frequency_sids = '0', 
                                    naes6_enabled = True, 
                                    naes6_sids_any_or_specific = 'SidsAny', 
                                    naes6_sids = '0', 
                                    reject_on_error = True, 
                                    checked = True, ), )
                            ], ), 
                    file_tests = telestream_cloud_qc.models.file_config.file_config(
                        container_test = telestream_cloud_qc.models.container_test.container_test(
                            container = 'None', 
                            reject_on_error = True, 
                            checked = True, ), 
                        mxf_op_test = telestream_cloud_qc.models.mxf_op_test.mxf_op_test(
                            op = 'OpAtom', 
                            require_closed = True, 
                            require_complete = True, 
                            reject_on_error = True, 
                            checked = True, ), 
                        video_codec_test = telestream_cloud_qc.models.video_codec_test.video_codec_test(
                            video_codec = 'Mpeg2', 
                            video_profile = 'VideoProfileNone', 
                            video_level = 'VideoLevelNone', 
                            reject_on_error = True, 
                            checked = True, ), 
                        container_essence_consistency_test = telestream_cloud_qc.models.container_essence_consistency_test.container_essence_consistency_test(
                            reject_on_error = True, 
                            checked = True, ), 
                        imf_conformance_test = telestream_cloud_qc.models.imf_conformance_test.imf_conformance_test(
                            reject_on_error = True, 
                            checked = True, ), 
                        netflix_photon_test = telestream_cloud_qc.models.netflix_photon_test.netflix_photon_test(
                            reject_on_error = True, 
                            checked = True, ), 
                        sps_pps_test = telestream_cloud_qc.models.sps_pps_test.sps_pps_test(
                            reject_on_error = True, 
                            checked = True, ), 
                        mbaff_test = telestream_cloud_qc.models.mbaff_test.mbaff_test(
                            mbaff_required = True, 
                            reject_on_error = True, 
                            checked = True, ), 
                        cabac_test = telestream_cloud_qc.models.cabac_test.cabac_test(
                            cabac_required = True, 
                            reject_on_error = True, 
                            checked = True, ), 
                        enhanced_syntax_test = telestream_cloud_qc.models.enhanced_syntax_test.enhanced_syntax_test(
                            check_container = True, 
                            check_elementary_stream = True, 
                            reject_on_error = True, 
                            checked = True, ), 
                        framesize_test = telestream_cloud_qc.models.framesize_test.framesize_test(
                            horizontal_size = 56, 
                            vertical_size = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        chroma_subsampling_test = telestream_cloud_qc.models.chroma_subsampling_test.chroma_subsampling_test(
                            subsampling = 'UnknownChromaSubsampling', 
                            reject_on_error = True, 
                            checked = True, ), 
                        pixel_aspect_ratio_test = telestream_cloud_qc.models.pixel_aspect_ratio_test.pixel_aspect_ratio_test(
                            pixel_aspect_ratio_numerator = 56, 
                            pixel_aspect_ratio_denominator = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        frame_aspect_ratio_test = telestream_cloud_qc.models.frame_aspect_ratio_test.frame_aspect_ratio_test(
                            frame_aspect_ratio_numerator = 56, 
                            frame_aspect_ratio_denominator = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        clean_aperture_test = telestream_cloud_qc.models.clean_aperture_test.clean_aperture_test(
                            reject_on_error = True, 
                            checked = True, ), 
                        i_tunes_compatibility_test = telestream_cloud_qc.models.i_tunes_compatibility_test.i_tunes_compatibility_test(
                            reject_on_error = True, 
                            checked = True, ), 
                        single_sample_description_test = telestream_cloud_qc.models.single_sample_description_test.single_sample_description_test(
                            reject_on_error = True, 
                            checked = True, ), 
                        framerate_test = telestream_cloud_qc.models.framerate_test.framerate_test(
                            framerate_numerator = 56, 
                            framerate_denominator = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        video_bit_depth_test = telestream_cloud_qc.models.video_bit_depth_test.video_bit_depth_test(
                            bit_depth = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        video_bit_rate_mode_test = telestream_cloud_qc.models.bit_rate_mode_test.bit_rate_mode_test(
                            reject_on_error = True, 
                            checked = True, ), 
                        video_bitrate_test = telestream_cloud_qc.models.video_bitrate_test.video_bitrate_test(
                            video_bitrate_lower = 1.337, 
                            video_bitrate_upper = 1.337, 
                            reject_on_error = True, 
                            checked = True, ), 
                        gop_length_test = telestream_cloud_qc.models.gop_length_test.gop_length_test(
                            gop_length = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        advanced_gop_length_test = telestream_cloud_qc.models.advanced_gop_length_test.advanced_gop_length_test(
                            first_gop_enabled = True, 
                            first_gop_i = '0', 
                            first_gop_p = '0', 
                            first_gop_closed = 'Either', 
                            other_gop_enabled = True, 
                            other_gop_i = '0', 
                            other_gop_p = '0', 
                            other_gop_closed = 'Either', 
                            last_gop_enabled = True, 
                            last_gop_i = '0', 
                            last_gop_p = '0', 
                            last_gop_closed = 'Either', 
                            order = 'Display', 
                            report = 'Unique', 
                            reject_on_error = True, 
                            checked = True, ), 
                        buffer_size_test = telestream_cloud_qc.models.buffer_size_test.buffer_size_test(
                            min_size = 56, 
                            max_size = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        closed_caps608_test = telestream_cloud_qc.models.text_stream_test.text_stream_test(
                            require = 'Require', 
                            teletext_type = 'TeletextAny', 
                            reject_on_error = True, 
                            checked = True, ), 
                        closed_caps708_test = telestream_cloud_qc.models.text_stream_test.text_stream_test(
                            reject_on_error = True, 
                            checked = True, ), 
                        dvb_subtitles_test = telestream_cloud_qc.models.text_stream_test.text_stream_test(
                            reject_on_error = True, 
                            checked = True, ), 
                        teletext_test = telestream_cloud_qc.models.text_stream_test.text_stream_test(
                            reject_on_error = True, 
                            checked = True, ), 
                        captions_test = telestream_cloud_qc.models.captions_test.captions_test(
                            signal_enabled = True, 
                            signal_time = 1.337, 
                            signal_time_secs_or_frames = 'Seconds', 
                            content_enabled = True, 
                            content_time = 1.337, 
                            content_time_secs_or_frames = 'Seconds', 
                            line21_cea608_enabled = True, 
                            a53_cea608_enabled = True, 
                            a53_cea708_enabled = True, 
                            smpte436m_cea608_enabled = True, 
                            smpte436m_cea708_enabled = True, 
                            start_duration_ignore = 1.337, 
                            end_duration_ignore = 1.337, 
                            reject_on_error = True, 
                            checked = True, ), 
                        active_format_test = telestream_cloud_qc.models.active_format_test.active_format_test(
                            afd = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        file_bitrate_test = telestream_cloud_qc.models.file_bitrate_test.file_bitrate_test(
                            file_bitrate_lower = 1.337, 
                            file_bitrate_upper = 1.337, 
                            reject_on_error = True, 
                            checked = True, ), 
                        file_duration_test = telestream_cloud_qc.models.file_duration_test.file_duration_test(
                            file_duration_lower_hours = 56, 
                            file_duration_lower_minutes = 56, 
                            file_duration_lower_seconds = 56, 
                            file_duration_lower_frames = 56, 
                            file_duration_upper_hours = 56, 
                            file_duration_upper_minutes = 56, 
                            file_duration_upper_seconds = 56, 
                            file_duration_upper_frames = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        audio_tracks_test = telestream_cloud_qc.models.audio_tracks_test.audio_tracks_test(
                            num_tracks = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        use_start_timecode_test = telestream_cloud_qc.models.use_start_timecode_test.use_start_timecode_test(
                            source = 'Container', 
                            checked = True, ), 
                        start_timecode_test = telestream_cloud_qc.models.start_timecode_test.start_timecode_test(
                            range_method = 'StartTcAt', 
                            hours = 56, 
                            minutes = 56, 
                            seconds = 56, 
                            frames = 56, 
                            frames_tolerance = 56, 
                            end_hours = 56, 
                            end_minutes = 56, 
                            end_seconds = 56, 
                            end_frames = 56, 
                            reject_on_error = True, 
                            do_correction = True, 
                            checked = True, ), 
                        dont_copy_av_delay_test = telestream_cloud_qc.models.dont_copy_av_delay_test.dont_copy_av_delay_test(
                            checked = True, ), 
                        container_drop_frame_test = telestream_cloud_qc.models.drop_frame_test.drop_frame_test(
                            drop_frame = 'NonDrop', 
                            reject_on_error = True, 
                            checked = True, ), 
                        video_drop_frame_test = telestream_cloud_qc.models.drop_frame_test.drop_frame_test(
                            reject_on_error = True, 
                            checked = True, ), 
                        timecode_continuity_test = telestream_cloud_qc.models.timecode_continuity_test.timecode_continuity_test(
                            disallow_wrap = True, 
                            reject_on_error = True, 
                            checked = True, ), ), 
                    mxf_test = telestream_cloud_qc.models.mxf_test.mxf_test(
                        as11_uk_dpp_metadata_test = telestream_cloud_qc.models.as11_uk_dpp_metadata_test.as11_uk_dpp_metadata_test(
                            shim = 'DppAuto', 
                            reject_on_error = True, 
                            checked = True, ), 
                        as11_xprofile_test = telestream_cloud_qc.models.as11_xprofile_test.as11_xprofile_test(
                            as11_rules = telestream_cloud_qc.models.as11_rules.as11_rules(
                                rule = [
                                    '0'
                                    ], ), 
                            embedded_xml_documents = 'EMBEDDED-XML-NONE', 
                            extra_audio_layout_modes = 'EXTRA-AUDIO-MODES-NONE', 
                            picture_essence_constraints = 'PIC-ESSENCE-CONSTRAINTS-NONE', 
                            file_format_specification_identification_label = 'FILE-FORMAT-SPEC-ID-NONE', 
                            reject_on_error = True, 
                            checked = True, ), 
                        operational_pattern_test = telestream_cloud_qc.models.operational_pattern_test.operational_pattern_test(
                            op1a = True, 
                            op2a = True, 
                            op3a = True, 
                            op1b = True, 
                            op2b = True, 
                            op3b = True, 
                            op1c = True, 
                            op2c = True, 
                            op3c = True, 
                            external_essence = '0', 
                            non_streamable = '0', 
                            multi_track = '0', 
                            op_atom = True, 
                            multi_source = '0', 
                            multi_essence = '0', 
                            reject_on_error = True, 
                            checked = True, ), 
                        version_test = telestream_cloud_qc.models.version_test.version_test(
                            mxf_version = 'SMPTE-377-2004', 
                            reject_on_error = True, 
                            checked = True, ), 
                        kag_size_test = telestream_cloud_qc.models.kag_size_test.kag_size_test(
                            size = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        run_in_test = telestream_cloud_qc.models.run_in_test.run_in_test(
                            max_bytes = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        wrapping_type_test = telestream_cloud_qc.models.wrapping_type_test.wrapping_type_test(
                            wrapping = 'ClipWrapped', 
                            reject_on_error = True, 
                            checked = True, ), 
                        source_package_timecode_test = telestream_cloud_qc.models.timecode_track_test.timecode_track_test(
                            require_continuous = True, 
                            reject_on_error = True, 
                            checked = True, ), 
                        material_package_timecode_test = telestream_cloud_qc.models.timecode_track_test.timecode_track_test(
                            require_continuous = True, 
                            reject_on_error = True, 
                            checked = True, ), 
                        sdti_timecode_continuity_test = telestream_cloud_qc.models.sdti_timecode_continuity_test.sdti_timecode_continuity_test(
                            reject_on_error = True, 
                            checked = True, ), 
                        index_table_test = telestream_cloud_qc.models.index_table_test.index_table_test(
                            edit_rate_num = 56, 
                            edit_rate_denom = 56, 
                            duration_min = 56, 
                            duration_max = 56, 
                            e_ubyte_count_min = 56, 
                            e_ubyte_count_max = 56, 
                            e_ubyte_count_constant = True, 
                            slice_count = 56, 
                            single_index_location = '0', 
                            single_essence_location = '0', 
                            forward_index_direction = '0', 
                            index_entry_array = '0', 
                            reject_on_error = True, 
                            checked = True, ), 
                        index_table_location_test = telestream_cloud_qc.models.location_test.location_test(
                            header = '0', 
                            body = '0', 
                            footer = '0', 
                            header_or_body_or_footer = True, 
                            reject_on_error = True, 
                            checked = True, ), 
                        header_partition_status_test = telestream_cloud_qc.models.partition_status_test.partition_status_test(
                            closed_complete = True, 
                            open_incomplete = True, 
                            closed_incomplete = True, 
                            open_complete = True, 
                            not_present = True, 
                            reject_on_error = True, 
                            checked = True, ), 
                        header_fill_test = telestream_cloud_qc.models.header_fill_test.header_fill_test(
                            fill_bytes = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        header_byte_count_test = telestream_cloud_qc.models.header_byte_count_test.header_byte_count_test(
                            header_bytes = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        body_partition_status_test = telestream_cloud_qc.models.partition_status_test.partition_status_test(
                            closed_complete = True, 
                            open_incomplete = True, 
                            closed_incomplete = True, 
                            open_complete = True, 
                            not_present = True, 
                            reject_on_error = True, 
                            checked = True, ), 
                        body_partition_count_test = telestream_cloud_qc.models.long_min_max_test.long_min_max_test(
                            min = 56, 
                            max = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        body_partition_duration_test = telestream_cloud_qc.models.long_min_max_test.long_min_max_test(
                            min = 56, 
                            max = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        body_partition_length_test = telestream_cloud_qc.models.long_min_max_test.long_min_max_test(
                            min = 56, 
                            max = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        footer_partition_status_test = telestream_cloud_qc.models.partition_status_test.partition_status_test(
                            closed_complete = True, 
                            open_incomplete = True, 
                            closed_incomplete = True, 
                            open_complete = True, 
                            not_present = True, 
                            reject_on_error = True, 
                            checked = True, ), 
                        rip_present_test = telestream_cloud_qc.models.rip_present_test.rip_present_test(
                            reject_on_error = True, 
                            checked = True, ), 
                        essence_location_test = telestream_cloud_qc.models.location_test.location_test(
                            header_or_body_or_footer = True, 
                            reject_on_error = True, 
                            checked = True, ), 
                        picture_essence_container_label_test = telestream_cloud_qc.models.mxf_key_test.mxf_key_test(
                            use_custom = True, 
                            predefined_key = '0', 
                            custom_key = '0', 
                            reject_on_error = True, 
                            checked = True, ), 
                        picture_element_key_test = telestream_cloud_qc.models.mxf_key_test.mxf_key_test(
                            use_custom = True, 
                            predefined_key = '0', 
                            custom_key = '0', 
                            reject_on_error = True, 
                            checked = True, ), 
                        picture_essence_coding_test = telestream_cloud_qc.models.picture_essence_coding_test.picture_essence_coding_test(
                            codings = telestream_cloud_qc.models.array_of_picture_essence_coding.array_of_picture_essence_coding(
                                picture_essence_coding = [
                                    'AVCI-50-1080-60-I'
                                    ], ), 
                            reject_on_error = True, 
                            checked = True, ), 
                        field_dominance_test = telestream_cloud_qc.models.field_dominance_test.field_dominance_test(
                            first_field = 'FdAbsent', 
                            reject_on_error = True, 
                            checked = True, ), 
                        signal_standard_test = telestream_cloud_qc.models.signal_standard_test.signal_standard_test(
                            standard = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        picture_offsets_test = telestream_cloud_qc.models.picture_offsets_test.picture_offsets_test(
                            stored_ftwo = 56, 
                            display_ftwo = 56, 
                            sampled_x = 56, 
                            sampled_y = 56, 
                            display_x = 56, 
                            display_y = 56, 
                            image_start = 56, 
                            image_end = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        active_format_descriptor_test = telestream_cloud_qc.models.active_format_descriptor_test.active_format_descriptor_test(
                            allowed_formats = '0', 
                            reject_on_error = True, 
                            checked = True, ), 
                        color_siting_test = telestream_cloud_qc.models.color_siting_test.color_siting_test(
                            color_siting = 'CoSiting', 
                            reject_on_error = True, 
                            checked = True, ), 
                        padding_bits_test = telestream_cloud_qc.models.padding_bits_test.padding_bits_test(
                            padding_bits = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        color_range_test = telestream_cloud_qc.models.color_range_test.color_range_test(
                            color_range = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        subsampling_test = telestream_cloud_qc.models.subsampling_test.subsampling_test(
                            horizontal = 56, 
                            vertical = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        component_depth_test = telestream_cloud_qc.models.component_depth_test.component_depth_test(
                            component_depth = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        stored_frame_size_test = telestream_cloud_qc.models.pic_frame_size_test.pic_frame_size_test(
                            frame_size = '0', 
                            reject_on_error = True, 
                            checked = True, ), 
                        sampled_frame_size_test = telestream_cloud_qc.models.pic_frame_size_test.pic_frame_size_test(
                            frame_size = '0', 
                            reject_on_error = True, 
                            checked = True, ), 
                        display_frame_size_test = telestream_cloud_qc.models.pic_frame_size_test.pic_frame_size_test(
                            frame_size = '0', 
                            reject_on_error = True, 
                            checked = True, ), 
                        aspect_ratio_test = telestream_cloud_qc.models.ratio_test.ratio_test(
                            numerator = 56, 
                            denominator = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        pic_edit_rate_test = telestream_cloud_qc.models.ratio_test.ratio_test(
                            numerator = 56, 
                            denominator = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        reference_levels_test = telestream_cloud_qc.models.reference_levels_test.reference_levels_test(
                            black_ref = 56, 
                            white_ref = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        video_line_map_test = telestream_cloud_qc.models.video_line_map_test.video_line_map_test(
                            line_maps = '0', 
                            reject_on_error = True, 
                            checked = True, ), 
                        video_descriptor_test = telestream_cloud_qc.models.video_descriptor_test.video_descriptor_test(
                            descriptor_type = 'MpegDescriptor', 
                            reject_on_error = True, 
                            checked = True, ), 
                        video_sub_descriptor_test = telestream_cloud_qc.models.video_sub_descriptor_test.video_sub_descriptor_test(
                            sub_descriptor_type = 'AvcSubDescriptor', 
                            reject_on_error = True, 
                            checked = True, ), 
                        mpeg_bit_rate_test = telestream_cloud_qc.models.long_min_max_test.long_min_max_test(
                            min = 56, 
                            max = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        mpeg_identical_gop_test = telestream_cloud_qc.models.extended_bool_value_test.extended_bool_value_test(
                            value = 'true', 
                            reject_on_error = True, 
                            checked = True, ), 
                        mpeg_max_gop_test = telestream_cloud_qc.models.long_min_max_test.long_min_max_test(
                            min = 56, 
                            max = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        mpeg_max_bpic_count_test = telestream_cloud_qc.models.long_min_max_test.long_min_max_test(
                            min = 56, 
                            max = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        mpeg_constant_bpic_flag_test = telestream_cloud_qc.models.extended_bool_value_test.extended_bool_value_test(
                            reject_on_error = True, 
                            checked = True, ), 
                        mpeg_coded_content_test = telestream_cloud_qc.models.long_value_test.long_value_test(
                            reject_on_error = True, 
                            checked = True, ), 
                        avc_decoding_delay_test = telestream_cloud_qc.models.long_value_test.long_value_test(
                            reject_on_error = True, 
                            checked = True, ), 
                        avc_coded_content_kind_test = telestream_cloud_qc.models.avc_coded_content_kind_test.avc_coded_content_kind_test(
                            kind = 'Unknown', 
                            reject_on_error = True, 
                            checked = True, ), 
                        avc_identical_gop_indicator_test = telestream_cloud_qc.models.bool_value_test.bool_value_test(
                            reject_on_error = True, 
                            checked = True, ), 
                        avc_max_gop_size_test = telestream_cloud_qc.models.long_value_test.long_value_test(
                            reject_on_error = True, 
                            checked = True, ), 
                        avc_max_bpic_count_test = telestream_cloud_qc.models.long_value_test.long_value_test(
                            reject_on_error = True, 
                            checked = True, ), 
                        avc_max_bit_rate_test = telestream_cloud_qc.models.long_min_max_test.long_min_max_test(
                            min = 56, 
                            max = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        avc_avg_bit_rate_test = telestream_cloud_qc.models.long_min_max_test.long_min_max_test(
                            min = 56, 
                            max = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        avc_sps_pps_test = telestream_cloud_qc.models.avc_sps_pps_test.avc_sps_pps_test(
                            profile = 56, 
                            profile_constraint = 56, 
                            sps_flag = 56, 
                            pps_flag = 56, 
                            level = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        sound_essence_container_label_test = telestream_cloud_qc.models.mxf_key_test.mxf_key_test(
                            use_custom = True, 
                            predefined_key = '0', 
                            custom_key = '0', 
                            reject_on_error = True, 
                            checked = True, ), 
                        sound_element_key_test = telestream_cloud_qc.models.mxf_key_test.mxf_key_test(
                            use_custom = True, 
                            predefined_key = '0', 
                            custom_key = '0', 
                            reject_on_error = True, 
                            checked = True, ), 
                        sound_essence_coding_test = telestream_cloud_qc.models.sound_essence_coding_test.sound_essence_coding_test(
                            reject_on_error = True, 
                            checked = True, ), 
                        audio_sampling_rate_test = telestream_cloud_qc.models.ratio_test.ratio_test(
                            numerator = 56, 
                            denominator = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        audio_locked_test = telestream_cloud_qc.models.bool_value_test.bool_value_test(
                            reject_on_error = True, 
                            checked = True, ), 
                        dialnorm_test = telestream_cloud_qc.models.long_min_max_test.long_min_max_test(
                            min = 56, 
                            max = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        audio_ref_level_test = telestream_cloud_qc.models.long_min_max_test.long_min_max_test(
                            min = 56, 
                            max = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        channel_count_test = telestream_cloud_qc.models.long_value_test.long_value_test(
                            reject_on_error = True, 
                            checked = True, ), 
                        quantization_bits_test = telestream_cloud_qc.models.long_value_test.long_value_test(
                            reject_on_error = True, 
                            checked = True, ), 
                        audio_avg_bytes_per_sec_test = telestream_cloud_qc.models.long_min_max_test.long_min_max_test(
                            min = 56, 
                            max = 56, 
                            reject_on_error = True, 
                            checked = True, ), 
                        checked = True, ), 
                    video_tests = telestream_cloud_qc.models.video_configs.video_configs(
                        video_test = [
                            telestream_cloud_qc.models.video_config.video_config(
                                track_id_test = telestream_cloud_qc.models.track_id_test.track_id_test(
                                    track_id = 56, 
                                    reject_on_error = True, 
                                    checked = True, ), 
                                ignore_vbi_test = telestream_cloud_qc.models.ignore_vbi_test.ignore_vbi_test(
                                    reject_on_error = True, 
                                    checked = True, ), 
                                force_color_space_test = telestream_cloud_qc.models.force_color_space_test.force_color_space_test(
                                    color_space = 'CSUnknown', 
                                    checked = True, ), 
                                video_segment_detection_test = telestream_cloud_qc.models.video_segment_detection_test.video_segment_detection_test(
                                    black_level_default_or_custom = 'Default', 
                                    black_level = 56, 
                                    percentage_of_frame = 56, 
                                    min_duration_required = 1.337, 
                                    min_duration_required_secs_or_frames = 'Seconds', 
                                    require_digital_silence = True, 
                                    reject_on_error = True, 
                                    checked = True, ), 
                                video_layout_test = telestream_cloud_qc.models.layout_test.layout_test(
                                    start_duration = 1.337, 
                                    end_duration = 1.337, 
                                    start_enabled = True, 
                                    start_hours = 56, 
                                    start_minutes = 56, 
                                    start_seconds = 56, 
                                    start_frames = 56, 
                                    end_enabled = True, 
                                    end_hours = 56, 
                                    end_minutes = 56, 
                                    end_seconds = 56, 
                                    end_frames = 56, 
                                    checked = True, ), 
                                letterboxing_test = telestream_cloud_qc.models.letterboxing_test.letterboxing_test(
                                    ratio_or_lines = 'Ratio', 
                                    ratio_horizontal = 56, 
                                    ratio_vertical = 56, 
                                    lines_top_and_bottom = 56, 
                                    lines_left_and_right = 56, 
                                    tolerance = 56, 
                                    black_level = 56, 
                                    reject_on_error = True, 
                                    checked = True, ), 
                                blanking_test = telestream_cloud_qc.models.blanking_test.blanking_test(
                                    black_level = 56, 
                                    checked = True, ), 
                                loss_of_chroma_test = telestream_cloud_qc.models.loss_of_chroma_test.loss_of_chroma_test(
                                    level_default_or_custom = 'Default', 
                                    level = 56, 
                                    tolerance = 56, 
                                    reject_on_error = True, 
                                    checked = True, ), 
                                chroma_level_test = telestream_cloud_qc.models.chroma_level_test.chroma_level_test(
                                    y_level_default_or_custom = 'Default', 
                                    y_level_lower = 56, 
                                    y_level_upper = 56, 
                                    y_level_max_outside_range = 1.337, 
                                    y_level_tolerance_low = 1.337, 
                                    y_level_tolerance_high = 1.337, 
                                    u_vlevel_default_or_custom = 'Default', 
                                    u_vlevel_lower = 56, 
                                    u_vlevel_upper = 56, 
                                    u_vlevel_max_outside_range = 1.337, 
                                    low_pass_filter = 'NoFilter', 
                                    reject_on_error = True, 
                                    do_correction = True, 
                                    checked = True, ), 
                                black_level_test = telestream_cloud_qc.models.black_level_test.black_level_test(
                                    level = 56, 
                                    level_max_outside_range = 1.337, 
                                    reject_on_error = True, 
                                    do_correction = True, 
                                    checked = True, ), 
                                rgb_gamut_test = telestream_cloud_qc.models.rgb_gamut_test.rgb_gamut_test(
                                    level_lower = 56, 
                                    level_upper = 56, 
                                    level_max_outside_range = 1.337, 
                                    level_tolerance = 1.337, 
                                    reject_on_error = True, 
                                    do_correction = True, 
                                    checked = True, ), 
                                hdr_test = telestream_cloud_qc.models.hdr_test.hdr_test(
                                    hdr_standard = 'GenericHdr', 
                                    max_fall_max_enabled = True, 
                                    max_fall_max = 56, 
                                    max_fall_error_enabled = True, 
                                    max_fall_error = 56, 
                                    max_cll_max_enabled = True, 
                                    max_cll_max = 56, 
                                    max_cll_error_enabled = True, 
                                    max_cll_error = 56, 
                                    always_calculate = True, 
                                    always_report = True, 
                                    reject_on_error = True, 
                                    checked = True, ), 
                                colour_bars_test = telestream_cloud_qc.models.colour_bars_test.colour_bars_test(
                                    color_bar_standard = 'AnyColorBars', 
                                    tolerance = 56, 
                                    time_range_enabled = True, 
                                    start_time = 1.337, 
                                    end_time = 1.337, 
                                    range_tolerance = 1.337, 
                                    not_at_any_other_time = True, 
                                    reject_on_error = True, 
                                    do_correction = True, 
                                    checked = True, ), 
                                black_frame_test = telestream_cloud_qc.models.black_frame_test.black_frame_test(
                                    level = 56, 
                                    percentage_of_frame = 56, 
                                    start_range_enabled = True, 
                                    start_time = 1.337, 
                                    end_time = 1.337, 
                                    start_range_tolerance = 1.337, 
                                    end_range_enabled = True, 
                                    end_range = 1.337, 
                                    end_range_tolerance = 1.337, 
                                    end_secs_or_frames = 'Seconds', 
                                    not_at_any_other_time = True, 
                                    max_time_allowed = 1.337, 
                                    max_time_allowed_secs_or_frames = 'Seconds', 
                                    max_time_at_start = True, 
                                    max_time_allowed_at_start = 1.337, 
                                    max_time_allowed_at_start_secs_or_frames = 'Seconds', 
                                    max_time_at_end = True, 
                                    max_time_allowed_at_end = 1.337, 
                                    max_time_allowed_at_end_secs_or_frames = 'Seconds', 
                                    reject_on_error = True, 
                                    do_correction = True, 
                                    checked = True, ), 
                                single_color_test = telestream_cloud_qc.models.single_color_test.single_color_test(
                                    max_time_allowed = 1.337, 
                                    percentage_of_frame = 1.337, 
                                    ignore_below = 56, 
                                    reject_on_error = True, 
                                    checked = True, ), 
                                freeze_frame_test = telestream_cloud_qc.models.freeze_frame_test.freeze_frame_test(
                                    time_range_enabled = True, 
                                    start_time = 1.337, 
                                    end_time = 1.337, 
                                    start_range_tolerance = 1.337, 
                                    end_range_enabled = True, 
                                    end_range = 1.337, 
                                    end_range_duration = 1.337, 
                                    end_range_tolerance = 1.337, 
                                    not_at_any_other_time = True, 
                                    max_time_allowed = 1.337, 
                                    reject_on_error = True, 
                                    checked = True, ), 
                                blockiness_test = telestream_cloud_qc.models.blockiness_test.blockiness_test(
                                    quality_level = 56, 
                                    max_time_below_quality = 1.337, 
                                    max_time_below_quality_secs_or_frames = 'Seconds', 
                                    reject_on_error = True, 
                                    checked = True, ), 
                                field_order_test = telestream_cloud_qc.models.field_order_test.field_order_test(
                                    flagged_field_order = 'UnknownFieldOrder', 
                                    baseband_enabled = True, 
                                    simple = True, 
                                    baseband_field_order = 'UnknownFieldOrder', 
                                    reject_on_error = True, 
                                    checked = True, ), 
                                cadence_test = telestream_cloud_qc.models.cadence_test.cadence_test(
                                    check_cadence = True, 
                                    cadence_required = 'CadenceUnknown', 
                                    check_cadence_breaks = True, 
                                    report_cadence = True, 
                                    check_for_poor_cadence = True, 
                                    reject_on_error = True, 
                                    checked = True, ), 
                                dropout_test = telestream_cloud_qc.models.dropout_test.dropout_test(
                                    reject_on_error = True, 
                                    do_correction = True, 
                                    checked = True, ), 
                                digital_dropout_test = telestream_cloud_qc.models.digital_dropout_test.digital_dropout_test(
                                    reject_on_error = True, 
                                    checked = True, ), 
                                stripe_test = telestream_cloud_qc.models.stripe_test.stripe_test(
                                    reject_on_error = True, 
                                    do_correction = True, 
                                    checked = True, ), 
                                corrupt_frame_test = telestream_cloud_qc.models.corrupt_frame_test.corrupt_frame_test(
                                    reject_on_error = True, 
                                    do_correction = True, 
                                    checked = True, ), 
                                flash_test = telestream_cloud_qc.models.flash_test.flash_test(
                                    check_type = 'PSEStandard', 
                                    check_for_extended = True, 
                                    check_for_red = True, 
                                    check_for_patterns = True, 
                                    reject_on_error = True, 
                                    do_correction = True, 
                                    checked = True, ), 
                                media_offline_test = telestream_cloud_qc.models.media_offline_test.media_offline_test(
                                    reject_on_error = True, 
                                    checked = True, ), )
                            ], ), )
            )
        else :
            return ModifyVidChecker8Body(
        )

    def testModifyVidChecker8Body(self):
        """Test ModifyVidChecker8Body"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
