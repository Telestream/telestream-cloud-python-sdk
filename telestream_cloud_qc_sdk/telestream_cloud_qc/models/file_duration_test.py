# coding: utf-8

"""
    Qc API

    Qc API  # noqa: E501

    The version of the OpenAPI document: 3.0.0
    Contact: cloudsupport@telestream.net
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from telestream_cloud_qc.configuration import Configuration


class FileDurationTest(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'file_duration_lower_hours': 'int',
        'file_duration_lower_minutes': 'int',
        'file_duration_lower_seconds': 'int',
        'file_duration_lower_frames': 'int',
        'file_duration_upper_hours': 'int',
        'file_duration_upper_minutes': 'int',
        'file_duration_upper_seconds': 'int',
        'file_duration_upper_frames': 'int',
        'reject_on_error': 'bool',
        'checked': 'bool'
    }

    attribute_map = {
        'file_duration_lower_hours': 'file_duration_lower_hours',
        'file_duration_lower_minutes': 'file_duration_lower_minutes',
        'file_duration_lower_seconds': 'file_duration_lower_seconds',
        'file_duration_lower_frames': 'file_duration_lower_frames',
        'file_duration_upper_hours': 'file_duration_upper_hours',
        'file_duration_upper_minutes': 'file_duration_upper_minutes',
        'file_duration_upper_seconds': 'file_duration_upper_seconds',
        'file_duration_upper_frames': 'file_duration_upper_frames',
        'reject_on_error': 'reject_on_error',
        'checked': 'checked'
    }

    def __init__(self, file_duration_lower_hours=None, file_duration_lower_minutes=None, file_duration_lower_seconds=None, file_duration_lower_frames=None, file_duration_upper_hours=None, file_duration_upper_minutes=None, file_duration_upper_seconds=None, file_duration_upper_frames=None, reject_on_error=None, checked=None, local_vars_configuration=None):  # noqa: E501
        """FileDurationTest - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._file_duration_lower_hours = None
        self._file_duration_lower_minutes = None
        self._file_duration_lower_seconds = None
        self._file_duration_lower_frames = None
        self._file_duration_upper_hours = None
        self._file_duration_upper_minutes = None
        self._file_duration_upper_seconds = None
        self._file_duration_upper_frames = None
        self._reject_on_error = None
        self._checked = None
        self.discriminator = None

        if file_duration_lower_hours is not None:
            self.file_duration_lower_hours = file_duration_lower_hours
        if file_duration_lower_minutes is not None:
            self.file_duration_lower_minutes = file_duration_lower_minutes
        if file_duration_lower_seconds is not None:
            self.file_duration_lower_seconds = file_duration_lower_seconds
        if file_duration_lower_frames is not None:
            self.file_duration_lower_frames = file_duration_lower_frames
        if file_duration_upper_hours is not None:
            self.file_duration_upper_hours = file_duration_upper_hours
        if file_duration_upper_minutes is not None:
            self.file_duration_upper_minutes = file_duration_upper_minutes
        if file_duration_upper_seconds is not None:
            self.file_duration_upper_seconds = file_duration_upper_seconds
        if file_duration_upper_frames is not None:
            self.file_duration_upper_frames = file_duration_upper_frames
        if reject_on_error is not None:
            self.reject_on_error = reject_on_error
        if checked is not None:
            self.checked = checked

    @property
    def file_duration_lower_hours(self):
        """Gets the file_duration_lower_hours of this FileDurationTest.  # noqa: E501


        :return: The file_duration_lower_hours of this FileDurationTest.  # noqa: E501
        :rtype: int
        """
        return self._file_duration_lower_hours

    @file_duration_lower_hours.setter
    def file_duration_lower_hours(self, file_duration_lower_hours):
        """Sets the file_duration_lower_hours of this FileDurationTest.


        :param file_duration_lower_hours: The file_duration_lower_hours of this FileDurationTest.  # noqa: E501
        :type: int
        """

        self._file_duration_lower_hours = file_duration_lower_hours

    @property
    def file_duration_lower_minutes(self):
        """Gets the file_duration_lower_minutes of this FileDurationTest.  # noqa: E501


        :return: The file_duration_lower_minutes of this FileDurationTest.  # noqa: E501
        :rtype: int
        """
        return self._file_duration_lower_minutes

    @file_duration_lower_minutes.setter
    def file_duration_lower_minutes(self, file_duration_lower_minutes):
        """Sets the file_duration_lower_minutes of this FileDurationTest.


        :param file_duration_lower_minutes: The file_duration_lower_minutes of this FileDurationTest.  # noqa: E501
        :type: int
        """

        self._file_duration_lower_minutes = file_duration_lower_minutes

    @property
    def file_duration_lower_seconds(self):
        """Gets the file_duration_lower_seconds of this FileDurationTest.  # noqa: E501


        :return: The file_duration_lower_seconds of this FileDurationTest.  # noqa: E501
        :rtype: int
        """
        return self._file_duration_lower_seconds

    @file_duration_lower_seconds.setter
    def file_duration_lower_seconds(self, file_duration_lower_seconds):
        """Sets the file_duration_lower_seconds of this FileDurationTest.


        :param file_duration_lower_seconds: The file_duration_lower_seconds of this FileDurationTest.  # noqa: E501
        :type: int
        """

        self._file_duration_lower_seconds = file_duration_lower_seconds

    @property
    def file_duration_lower_frames(self):
        """Gets the file_duration_lower_frames of this FileDurationTest.  # noqa: E501


        :return: The file_duration_lower_frames of this FileDurationTest.  # noqa: E501
        :rtype: int
        """
        return self._file_duration_lower_frames

    @file_duration_lower_frames.setter
    def file_duration_lower_frames(self, file_duration_lower_frames):
        """Sets the file_duration_lower_frames of this FileDurationTest.


        :param file_duration_lower_frames: The file_duration_lower_frames of this FileDurationTest.  # noqa: E501
        :type: int
        """

        self._file_duration_lower_frames = file_duration_lower_frames

    @property
    def file_duration_upper_hours(self):
        """Gets the file_duration_upper_hours of this FileDurationTest.  # noqa: E501


        :return: The file_duration_upper_hours of this FileDurationTest.  # noqa: E501
        :rtype: int
        """
        return self._file_duration_upper_hours

    @file_duration_upper_hours.setter
    def file_duration_upper_hours(self, file_duration_upper_hours):
        """Sets the file_duration_upper_hours of this FileDurationTest.


        :param file_duration_upper_hours: The file_duration_upper_hours of this FileDurationTest.  # noqa: E501
        :type: int
        """

        self._file_duration_upper_hours = file_duration_upper_hours

    @property
    def file_duration_upper_minutes(self):
        """Gets the file_duration_upper_minutes of this FileDurationTest.  # noqa: E501


        :return: The file_duration_upper_minutes of this FileDurationTest.  # noqa: E501
        :rtype: int
        """
        return self._file_duration_upper_minutes

    @file_duration_upper_minutes.setter
    def file_duration_upper_minutes(self, file_duration_upper_minutes):
        """Sets the file_duration_upper_minutes of this FileDurationTest.


        :param file_duration_upper_minutes: The file_duration_upper_minutes of this FileDurationTest.  # noqa: E501
        :type: int
        """

        self._file_duration_upper_minutes = file_duration_upper_minutes

    @property
    def file_duration_upper_seconds(self):
        """Gets the file_duration_upper_seconds of this FileDurationTest.  # noqa: E501


        :return: The file_duration_upper_seconds of this FileDurationTest.  # noqa: E501
        :rtype: int
        """
        return self._file_duration_upper_seconds

    @file_duration_upper_seconds.setter
    def file_duration_upper_seconds(self, file_duration_upper_seconds):
        """Sets the file_duration_upper_seconds of this FileDurationTest.


        :param file_duration_upper_seconds: The file_duration_upper_seconds of this FileDurationTest.  # noqa: E501
        :type: int
        """

        self._file_duration_upper_seconds = file_duration_upper_seconds

    @property
    def file_duration_upper_frames(self):
        """Gets the file_duration_upper_frames of this FileDurationTest.  # noqa: E501


        :return: The file_duration_upper_frames of this FileDurationTest.  # noqa: E501
        :rtype: int
        """
        return self._file_duration_upper_frames

    @file_duration_upper_frames.setter
    def file_duration_upper_frames(self, file_duration_upper_frames):
        """Sets the file_duration_upper_frames of this FileDurationTest.


        :param file_duration_upper_frames: The file_duration_upper_frames of this FileDurationTest.  # noqa: E501
        :type: int
        """

        self._file_duration_upper_frames = file_duration_upper_frames

    @property
    def reject_on_error(self):
        """Gets the reject_on_error of this FileDurationTest.  # noqa: E501


        :return: The reject_on_error of this FileDurationTest.  # noqa: E501
        :rtype: bool
        """
        return self._reject_on_error

    @reject_on_error.setter
    def reject_on_error(self, reject_on_error):
        """Sets the reject_on_error of this FileDurationTest.


        :param reject_on_error: The reject_on_error of this FileDurationTest.  # noqa: E501
        :type: bool
        """

        self._reject_on_error = reject_on_error

    @property
    def checked(self):
        """Gets the checked of this FileDurationTest.  # noqa: E501


        :return: The checked of this FileDurationTest.  # noqa: E501
        :rtype: bool
        """
        return self._checked

    @checked.setter
    def checked(self, checked):
        """Sets the checked of this FileDurationTest.


        :param checked: The checked of this FileDurationTest.  # noqa: E501
        :type: bool
        """

        self._checked = checked

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, FileDurationTest):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, FileDurationTest):
            return True

        return self.to_dict() != other.to_dict()
